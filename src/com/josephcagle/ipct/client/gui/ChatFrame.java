package com.josephcagle.ipct.client.gui;

import java.awt.BorderLayout;
import java.awt.Image;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.Queue;
import java.util.concurrent.ConcurrentLinkedQueue;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextField;
import javax.swing.JTextPane;
import javax.swing.border.EmptyBorder;

public class ChatFrame extends JFrame {
	private static final long serialVersionUID = 1L;
	
	private static final String LINE_SEPARATOR = System.getProperty("line.separator");  // don't getProperty() more than once
	
	private JPanel contentPane;
	private JTextField textField;
	private JTextPane chatPane;
	
	private Queue<String> outgoingMsgs = new ConcurrentLinkedQueue<>();
	
	private boolean windowClosed = false;
	
	private final Image icon = new ImageIcon(this.getClass().getResource("IPCT_logo.png")).getImage();
	
//	/**
//	 * Test-launch the application.
//	 */
	public static void main(String[] args) {
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					ChatFrame frame = new ChatFrame();
					frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
					frame.setVisible(true);
					frame.displayMessage("hello world");
					frame.displayMessage("<b>hello world</b> again");
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

//	/**
//	 * Create the frame.
//	 */
	public ChatFrame() {
		
		this.setIconImage(icon);
		
		// boilerplate generated by WindowBuilder + add custom listeners
		setTitle("The IPCT - Chat");
		setSize(450, 550);
		setLocationRelativeTo(null);
		setLocationByPlatform(true);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		contentPane.setLayout(new BorderLayout(0, 0));
		setContentPane(contentPane);

		JPanel mainPanel = new JPanel();
		contentPane.add(mainPanel, BorderLayout.CENTER);
		mainPanel.setLayout(new BorderLayout(0, 0));

		JPanel buttonPanel = new JPanel();
		mainPanel.add(buttonPanel, BorderLayout.NORTH);
		buttonPanel.setLayout(new BorderLayout(0, 0));

		JButton leaveButton = new JButton("Leave");
		leaveButton.addActionListener(e -> {
			if (JOptionPane.showConfirmDialog(null, "Are you sure you want to leave?", null, JOptionPane.YES_NO_OPTION,
					JOptionPane.WARNING_MESSAGE, null) == JOptionPane.YES_OPTION)
				this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
		});
		buttonPanel.add(leaveButton, BorderLayout.WEST);

		JButton aboutButton = new JButton("About");
		aboutButton.addActionListener(e -> {
			JOptionPane.showMessageDialog(null,
					"<html><b>The Inter-Pi Connection Thingamajigger</b>" + LINE_SEPARATOR +
					"version 1.1" + LINE_SEPARATOR +
					"(or, the Yoshi Message Test Flyer)" + LINE_SEPARATOR +
					LINE_SEPARATOR +
					"Created by Joseph Cagle" + LINE_SEPARATOR +
					" - This program is written in Java, so" + LINE_SEPARATOR +
					"it isn't limited to Raspberry Pis."
						, "About", JOptionPane.PLAIN_MESSAGE);
		});
		buttonPanel.add(aboutButton, BorderLayout.EAST);

		JPanel msgsPanel = new JPanel();
		mainPanel.add(msgsPanel, BorderLayout.CENTER);
		msgsPanel.setLayout(new BorderLayout(0, 0));

		JScrollPane chatPanel = new JScrollPane();
		msgsPanel.add(chatPanel, BorderLayout.CENTER);

		chatPane = new JTextPane();
		chatPanel.setViewportView(chatPane);
//		chatPane.setEditorKit(chatPane.getEditorKitForContentType("html"));  //setContentType("text/html");   
//		or maybe..
//		chatPane.putClientProperty(JTextPane.HONOR_DISPLAY_PROPERTIES, Boolean.TRUE);  // not working; help!!
		chatPane.setEditable(false);

		JPanel sendPanel = new JPanel();
		msgsPanel.add(sendPanel, BorderLayout.SOUTH);
		sendPanel.setLayout(new BorderLayout(0, 0));

		textField = new JTextField();
		sendPanel.add(textField);
		textField.setColumns(10);
		
		JButton sendButton = new JButton("Send ->");
		sendButton.addActionListener(e -> {
			
			String s = textField.getText();

			if (!s.isEmpty() && !s.matches("^\\s*")) {
				outgoingMsgs.add(s.trim());
				textField.setText(null);
			}
			
		});
		this.getRootPane().setDefaultButton(sendButton);
		sendPanel.add(sendButton, BorderLayout.EAST);
		
		this.addWindowListener( new WindowAdapter() {
		    @Override
			public void windowOpened (WindowEvent e) {
		    		textField.requestFocus();
		    }
		    
		    @Override
		    public void windowClosing (WindowEvent e) {
		    		windowClosed = true;
		    }
		});
		
	}  // end ChatFrame()

	public void displayMessage(String message) {
		// fix this
		
//		if (message.contains(":")) {  // is "user: msg"
//			String[] msgArr = message.split(":", 2);
//			message = "<b>"+msgArr[0]+"</b>" + msgArr[1];  // insert bold formatting
//		}
		
		
		if (chatPane.getText().isEmpty())
			chatPane.setText(/* "<html>"+ */  message);  // enable html formatting?
		else
			chatPane.setText(chatPane.getText() + LINE_SEPARATOR + message);
		
		// scroll to bottom
		chatPane.setCaretPosition(chatPane.getDocument().getLength());
	}
	
	public boolean hasNextOutgoingMsg() {
		return !outgoingMsgs.isEmpty();
	}
	
	public String getNextOutgoingMsg() {
//		System.out.println(this.outgoingMsgs);
		String msg = outgoingMsgs.remove();
//		System.out.println(this.outgoingMsgs);
		return msg;
	}
	
	
	public void setUsername(String username) {
		this.setTitle("The IPCT - Chat (" + username + ")");
	}
	
	public boolean isClosed() {
		return windowClosed;
	}
}
